{"version":3,"sources":["font/Roboto-Regular.ttf","GlobalStyle.js","redux/list/listTypes.js","redux/list/listAction.js","components/Page/Home.js","image/zelda.png","components/foundation/Layout/index.jsx","App.js","redux/list/listReducer.js","redux/store.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Roboto","FETCH_LIST_REQUEST","FETCH_LIST_SUCCESS","FETCH_LIST_FAILURE","fetchListRequest","type","fetchList","dispatch","axios","method","url","withCredentials","then","res","listData","data","payload","catch","error","errorMsg","message","fetchListFailure","useStyles","makeStyles","root","borderRadius","borderCollapse","boxShadow","marginTop","table","minWidth","image","height","width","title","textTransform","fontSize","textHeader","fontWeight","textHeaderLocation","description","fontStyle","content","location","margin","ExpandableTableRow","children","expandComponent","otherProps","useState","isExpanded","setIsExpanded","TableRow","TableCell","IconButton","onClick","connect","state","list","page","setPage","rowsPerPage","setRowsPerPage","useEffect","classes","loading","Paper","className","Table","aria-label","TableHead","heardertable","padding","align","TableBody","slice","map","item","colSpan","component","scope","name","common_locations","anotherItem","src","alt","TablePagination","rowsPerPageOptions","count","onPageChange","event","newPage","onRowsPerPageChange","target","value","NavStyle","styled","div","logo","Title","h1","NavBar","App","path","exact","Home","initialState","listReducer","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAAe,MAA0B,2CC6B1BA,EA1BKC,YAAH,6eAGFC,G,iDCNFC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAqB,qBCCrBC,EAAmB,WAC5B,MAAO,CACHC,KAAMJ,IAkBDK,EAAY,WACrB,OAAO,SAACC,GACJA,EAASH,GACTI,IAAM,CACFC,OAAQ,MACRC,IAAK,iEACLC,iBAAiB,IAGhBC,MAAK,SAAAC,GACF,IAAMC,EAAWD,EAAIE,KACrBR,EAxBL,CACHF,KAAMH,EACNc,QAsBiCF,OAE5BG,OAAM,SAAAC,GACH,IAAMC,EAAWD,EAAME,QACvBb,EAtBgB,SAAAW,GAC5B,MAAO,CACHb,KAAMF,EACNa,QAASE,GAmBQG,CAAiBF,S,0HCrBpCG,EAAYC,YAAW,CAC3BC,KAAM,CACJC,aAAc,SACdC,eAAgB,OAChBC,UAAW,4CACXC,UAAW,OAEbC,MAAO,CACLC,SAAU,cAEZC,MAAO,CACLC,OAAQ,UACRC,MAAO,UACPR,aAAc,MACdE,UAAW,6CAEbO,MAAO,CACLC,cAAe,YACfC,SAAU,aAEZC,WAAY,CACVD,SAAU,UACVE,WAAY,QAEdC,mBAAoB,CAClBH,SAAU,UACVE,WAAY,QAEdE,YAAa,CACXC,UAAW,SACXL,SAAU,QAEZM,QAAS,CACPN,SAAU,QAEZO,SAAU,CACRC,OAAQ,KAKNC,EAAqB,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,gBAAoBC,EAAiB,gDACvCC,oBAAS,GAD8B,mBACpEC,EADoE,KACxDC,EADwD,KAG3E,OACE,qCACE,eAACC,EAAA,EAAD,2BAAcJ,GAAd,cACE,cAACK,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAS,kBAAMJ,GAAeD,IAA1C,SACGA,EAAa,cAAC,IAAD,IAA0B,cAAC,IAAD,QAG3CJ,MAEFI,GACC,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,IACCN,SAsHIS,eAZS,SAACC,GACvB,MAAO,CACL3C,SAAU2C,EAAMC,SAIO,SAACnD,GAC1B,MAAO,CACLD,UAAW,kBAAMC,EAASD,SAIfkD,EA/GF,SAAC,GAA6B,IAA3B1C,EAA0B,EAA1BA,SAAUR,EAAgB,EAAhBA,UAAgB,EAChB2C,mBAAS,GADO,mBACjCU,EADiC,KAC3BC,EAD2B,OAEFX,mBAAS,GAFP,mBAEjCY,EAFiC,KAEpBC,EAFoB,KAaxCC,qBAAU,WACRzD,MAEC,IAEH,IAAM0D,EAAU1C,IAEhB,OAAOR,EAASmD,QACd,yCACEnD,EAASI,MACX,6BAAKJ,EAASI,QAEd,mCACE,eAACgD,EAAA,EAAD,CAAOC,UAAWH,EAAQxC,KAA1B,UACE,eAAC4C,EAAA,EAAD,CAAOD,UAAWH,EAAQnC,MAAOwC,aAAW,eAA5C,UACE,cAACC,EAAA,EAAD,CAAWH,UAAWH,EAAQO,aAA9B,SACE,eAACnB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWmB,QAAQ,aACnB,cAACnB,EAAA,EAAD,CAAWc,UAAWH,EAAQ3B,WAA9B,kBACA,cAACgB,EAAA,EAAD,CAAWc,UAAWH,EAAQ3B,WAAYoC,MAAM,SAAhD,sBAGA,cAACpB,EAAA,EAAD,CAAWc,UAAWH,EAAQ3B,WAAYoC,MAAM,QAAhD,0BAKJ,cAACC,EAAA,EAAD,UACG5D,GACCA,EAASC,MACTD,EAASC,KACN4D,MAAMhB,EAAOE,EAAaF,EAAOE,EAAcA,GAC/Ce,KAAI,SAACC,GACJ,OACE,eAAC,EAAD,CAEE9B,gBACE,cAACM,EAAA,EAAD,CAAWc,UAAWH,EAAQxB,YAAasC,QAAQ,IAAnD,SACGD,EAAKrC,cAJZ,UAQE,cAACa,EAAA,EAAD,CACEc,UAAWH,EAAQ9B,MACnB6C,UAAU,KACVC,MAAM,MAHR,SAKGH,EAAKI,OAER,cAAC5B,EAAA,EAAD,CAAWc,UAAWH,EAAQtB,QAAS+B,MAAM,SAA7C,SAC4B,MAAzBI,EAAKK,iBACJL,EAAKK,iBAAiBN,KAAI,SAACO,GACzB,OACE,mBAAGhB,UAAWH,EAAQrB,SAAtB,SAAiCwC,OAIrC,mBAAGhB,UAAWH,EAAQrB,SAAtB,yCAGJ,cAACU,EAAA,EAAD,CAAWoB,MAAM,QAAjB,SACE,qBACEN,UAAWH,EAAQjC,MACnBqD,IAAKP,EAAK9C,MACVsD,IAAI,gBA7BHR,EAAKI,cAqCxB,cAACK,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,KAChCR,UAAU,MACVS,MAAO,GACP3B,YAAaA,EACbF,KAAMA,EACN8B,aAvFiB,SAACC,EAAOC,GAC/B/B,EAAQ+B,IAuFFC,oBApFwB,SAACF,GAC/B5B,GAAgB4B,EAAMG,OAAOC,OAC7BlC,EAAQ,cC3FG,MAA0B,kCCInCmC,EAAWC,IAAOC,IAAV,0PAOYC,GAIpBC,EAAQH,IAAOI,GAAV,+FAcIC,EARA,WACb,OACE,cAACN,EAAD,UACE,cAACI,EAAD,+C,gBCLSG,MAff,WACE,OACE,qCACE,cAAC,EAAD,IACA,qBAAKnC,UAAU,YAAf,SACA,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOoC,KAAK,IAAIC,OAAK,EAACzB,UAAW0B,c,wBCTrCC,EAAe,CACjBzC,SAAS,EACTP,KAAM,GACNxC,MAAO,IA0BMyF,EAvBG,WAAmC,IAAlClD,EAAiC,uDAAzBiD,EAAcE,EAAW,uCAClD,OAAQA,EAAOvG,MACb,KAAKJ,EACH,OAAO,2BACFwD,GADL,IAEEQ,SAAS,IAEb,KAAK/D,EACH,MAAO,CACL+D,SAAS,EACTP,KAAMkD,EAAO5F,QACbE,MAAO,IAEX,KAAKf,EACH,MAAO,CACL8D,SAAS,EACTP,KAAM,GACNxC,MAAO0F,EAAO5F,SAElB,QAAS,OAAOyC,IClBPoD,GAJDC,sBACZH,EAAaI,8BAAoBC,0BAAgBC,OCGnDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAUP,MAAOA,GAAjB,UACA,cAAC,EAAD,IACA,cAAC,EAAD,SAGFQ,SAASC,eAAe,W","file":"static/js/main.e138ec2e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Roboto-Regular.a8d6ac03.ttf\";","import { createGlobalStyle } from 'styled-components'\nimport Roboto from './font/Roboto-Regular.ttf'\n\nconst GlobalStyle = createGlobalStyle`\n@font-face {\n    font-family: 'Roboto';\n    src: url(${Roboto}) format('truetype');\n    font-style: normal;\n    font-display: auto;\n  }\n\n  body {\n    font-family: 'Roboto';\n    text-rendering: optimizeLegibility;\n    margin: 0;\n    padding: 0;\n    max-width: 100%;\n    font-weight: 400;\n    -webkit-font-smoothing: antialiased;\n    background-color: #F5F5F5;\n  }\n  \n  .container {\n    max-width: 1184px;\n    margin: 0 auto;\n    padding: 0 1rem;\n  }\n`\n\nexport default GlobalStyle","export const FETCH_LIST_REQUEST = 'FETCH_LIST_REQUEST'\nexport const FETCH_LIST_SUCCESS = 'FETCH_LIST_SUCCESS'\nexport const FETCH_LIST_FAILURE = 'FETCH_LIST_FAILURE'","import axios from 'axios'\nimport { FETCH_LIST_FAILURE, FETCH_LIST_REQUEST, FETCH_LIST_SUCCESS } from \"./listTypes\"\n\nexport const fetchListRequest = () => {\n    return {\n        type: FETCH_LIST_REQUEST\n    }\n}\n\nexport const fetchListSucces = list => {\n    return {\n        type: FETCH_LIST_SUCCESS,\n        payload: list\n    }\n}\n\nexport const fetchListFailure = error => {\n    return {\n        type: FETCH_LIST_FAILURE,\n        payload: error\n    }\n}\n\nexport const fetchList = () => {\n    return (dispatch) => {\n        dispatch(fetchListRequest)\n        axios({\n            method: 'get',\n            url: 'https://botw-compendium.herokuapp.com/api/v2/category/monsters',\n            withCredentials: true,\n        })\n        // axios.get('https://botw-compendium.herokuapp.com/api/v2/category/monsters')\n            .then(res=>{\n                const listData = res.data\n                dispatch(fetchListSucces(listData))\n            })\n            .catch(error => {\n                const errorMsg = error.message\n                dispatch(fetchListFailure(errorMsg))\n            })\n    }\n}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchList } from '../../redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n  TablePagination,\n} from '@material-ui/core'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\n\nconst useStyles = makeStyles({\n  root: {\n    borderRadius: '0.5rem',\n    borderCollapse: 'none',\n    boxShadow: 'rgba(0, 0, 0, 0.24) 0rem 0.1875rem 0.5rem',\n    marginTop: '8px',\n  },\n  table: {\n    minWidth: '23.4375rem',\n  },\n  image: {\n    height: '6.25rem',\n    width: '6.25rem',\n    borderRadius: '3px',\n    boxShadow: 'rgba(0, 0, 0, 0.24) 0rem 0.1875rem 0.5rem',\n  },\n  title: {\n    textTransform: 'uppercase',\n    fontSize: '0.9375rem',\n  },\n  textHeader: {\n    fontSize: '1.25rem',\n    fontWeight: 'bold',\n  },\n  textHeaderLocation: {\n    fontSize: '1.25rem',\n    fontWeight: 'bold',\n  },\n  description: {\n    fontStyle: 'italic',\n    fontSize: '1rem',\n  },\n  content: {\n    fontSize: '1rem',\n  },\n  location: {\n    margin: 0,\n  },\n  \n})\n\nconst ExpandableTableRow = ({ children, expandComponent, ...otherProps }) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  return (\n    <>\n      <TableRow {...otherProps}>\n        <TableCell>\n          <IconButton onClick={() => setIsExpanded(!isExpanded)}>\n            {isExpanded ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        {children}\n      </TableRow>\n      {isExpanded && (\n        <TableRow>\n          <TableCell />\n          {expandComponent}\n        </TableRow>\n      )}\n    </>\n  )\n}\n\nconst Home = ({ listData, fetchList }) => {\n  const [page, setPage] = useState(0)\n  const [rowsPerPage, setRowsPerPage] = useState(5)\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value)\n    setPage(0)\n  }\n\n  useEffect(() => {\n    fetchList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const classes = useStyles()\n\n  return listData.loading ? (\n    <h2>Loading</h2>\n  ) : listData.error ? (\n    <h2>{listData.error}</h2>\n  ) : (\n    <>\n      <Paper className={classes.root}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead className={classes.heardertable}>\n            <TableRow>\n              <TableCell padding=\"checkbox\" />\n              <TableCell className={classes.textHeader}>NAME</TableCell>\n              <TableCell className={classes.textHeader} align=\"center\">\n                LOCATION\n              </TableCell>\n              <TableCell className={classes.textHeader} align=\"right\">\n                PICTURE\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {listData &&\n              listData.data &&\n              listData.data\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((item) => {\n                  return (\n                    <ExpandableTableRow\n                      key={item.name}\n                      expandComponent={\n                        <TableCell className={classes.description} colSpan=\"5\">\n                          {item.description}\n                        </TableCell>\n                      }\n                    >\n                      <TableCell\n                        className={classes.title}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {item.name}\n                      </TableCell>\n                      <TableCell className={classes.content} align=\"center\">\n                        {item.common_locations != null ? (\n                          item.common_locations.map((anotherItem) => {\n                            return (\n                              <p className={classes.location}>{anotherItem}</p>\n                            )\n                          })\n                        ) : (\n                          <p className={classes.location}>Nowhere and Everywhere...</p>\n                        )}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <img\n                          className={classes.image}\n                          src={item.image}\n                          alt=\"monster\"\n                        />\n                      </TableCell>\n                    </ExpandableTableRow>\n                  )\n                })}\n          </TableBody>\n        </Table>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25, 100]}\n          component=\"div\"\n          count={81}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    listData: state.list,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchList: () => dispatch(fetchList()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","export default __webpack_public_path__ + \"static/media/zelda.7c8af604.png\";","import React from 'react'\nimport styled from 'styled-components'\nimport logo from '../../../image/zelda.png'\n\nconst NavStyle = styled.div`\n  width: 100%;\n  height: 130px;\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  background-image: url(${logo});\n  background-position: center;\n  background-repeat: no-repeat;\n`\nconst Title = styled.h1`\n  display: flex;\n  text-align: center;\n  margin: 50px 0 40px 0;\n`\n\nconst NavBar = () => {\n  return (\n    <NavStyle>\n      <Title>Welcome to the World of Zelda</Title>\n    </NavStyle>\n  )\n}\n\nexport default NavBar\n","import Home from './components/Page/Home'\nimport NavBar from './components/foundation/Layout'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <>\n      <NavBar />\n      <div className=\"container\">\n      <Router>\n        <Switch>\n          <Route path='/' exact component={Home} />\n        </Switch>\n      </Router>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import { FETCH_LIST_REQUEST, FETCH_LIST_SUCCESS, FETCH_LIST_FAILURE } from \"./listTypes\";\n\nconst initialState = {\n    loading: false,\n    list: {},\n    error: ''\n}\n\nconst listReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case FETCH_LIST_REQUEST:\n        return {\n          ...state,\n          loading: true\n        }\n      case FETCH_LIST_SUCCESS:\n        return {\n          loading: false,\n          list: action.payload,\n          error: ''\n        }\n      case FETCH_LIST_FAILURE:\n        return {\n          loading: false,\n          list: [],\n          error: action.payload\n        }\n      default: return state\n    }\n  }\n\n  export default listReducer","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport listReducer from './list/listReducer'\n\nconst store = createStore(\n  listReducer, composeWithDevTools(applyMiddleware(thunk))\n)\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GlobalStyle from './GlobalStyle'\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <GlobalStyle />\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}